{
  "address": "0x99d73a610cf18C55a28b609034c7B40594D0b407",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_userB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "returnedTo",
          "type": "address"
        }
      ],
      "name": "Dissolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemedBy",
          "type": "address"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "approveDissolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveRedemption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dissolutionApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeDissolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeRedemption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "experienceNFTAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "experienceTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDissolved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRedeemed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redemptionApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf473e0b78485c881de8ecaf552fc70f2d4ba6dbcb29118f77bdf6ed0bfefcb3d",
  "receipt": {
    "to": null,
    "from": "0xf5Ac0b87325Bf1B3Eee525EB9646faFD69D2FedC",
    "contractAddress": "0x99d73a610cf18C55a28b609034c7B40594D0b407",
    "transactionIndex": 4,
    "gasUsed": "626953",
    "logsBloom": "0x
    "blockHash": "0x212d491ee393c22d73ed43d0accaefb0032e8d6df1cc559390bb585cdc35c5ef",
    "transactionHash": "0xf473e0b78485c881de8ecaf552fc70f2d4ba6dbcb29118f77bdf6ed0bfefcb3d",
    "logs": [],
    "blockNumber": 195070022,
    "cumulativeGasUsed": "1019617",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000",
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "33cb716f3c7232314a0055ce24e358a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"returnedTo\",\"type\":\"address\"}],\"name\":\"Dissolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemedBy\",\"type\":\"address\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveDissolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveRedemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dissolutionApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDissolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeRedemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"experienceNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"experienceTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDissolved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRedeemed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redemptionApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"edsphinx\",\"details\":\"Contiene un ExperienceNFT como promesa. Requiere acuerdo de ambos para actuar.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"Commitment Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveDissolution()\":{\"notice\":\"Un participante aprueba la disoluci\\u00f3n del compromiso.\"},\"approveRedemption()\":{\"notice\":\"Un participante aprueba el canje de la experiencia.\"},\"executeDissolution()\":{\"notice\":\"Disuelve el compromiso y devuelve el NFT al comprador original si ambos aprueban.\"},\"executeRedemption()\":{\"notice\":\"Canjea la experiencia si ambos han aprobado. Transfiere el NFT a quien lo ejecuta.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Sunny/CommitmentVault.sol\":\"CommitmentVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721Receiver} from \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\\n * {IERC721-setApprovalForAll}.\\n */\\nabstract contract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/Sunny/CommitmentVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n/**\\n * @title Commitment Vault\\n * @author edsphinx\\n * @dev Contiene un ExperienceNFT como promesa. Requiere acuerdo de ambos para actuar.\\n */\\ncontract CommitmentVault is ERC721Holder {\\n    address public immutable userA; // Quien crea el compromiso\\n    address public immutable userB; // Quien recibe el compromiso\\n    address public immutable experienceNFTAddress;\\n    uint256 public immutable experienceTokenId;\\n\\n    bool public isRedeemed;\\n    bool public isDissolved;\\n\\n    mapping(address => bool) public redemptionApprovals;\\n    mapping(address => bool) public dissolutionApprovals;\\n\\n    event Redeemed(address indexed redeemedBy);\\n    event Dissolved(address indexed returnedTo);\\n\\n    modifier onlyParticipants() {\\n        require(msg.sender == userA || msg.sender == userB, \\\"Not a participant\\\");\\n        _;\\n    }\\n\\n    constructor(address _userA, address _userB, address _nftAddress, uint256 _tokenId) {\\n        userA = _userA;\\n        userB = _userB;\\n        experienceNFTAddress = _nftAddress;\\n        experienceTokenId = _tokenId;\\n    }\\n\\n    /**\\n     * @notice Un participante aprueba el canje de la experiencia.\\n     */\\n    function approveRedemption() external onlyParticipants {\\n        redemptionApprovals[msg.sender] = true;\\n    }\\n\\n    /**\\n     * @notice Canjea la experiencia si ambos han aprobado. Transfiere el NFT a quien lo ejecuta.\\n     */\\n    function executeRedemption() external onlyParticipants {\\n        require(redemptionApprovals[userA] && redemptionApprovals[userB], \\\"Both must approve\\\");\\n        require(!isRedeemed && !isDissolved, \\\"Vault is settled\\\");\\n        isRedeemed = true;\\n        IERC721(experienceNFTAddress).safeTransferFrom(address(this), msg.sender, experienceTokenId);\\n        emit Redeemed(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Un participante aprueba la disoluci\\u00f3n del compromiso.\\n     */\\n    function approveDissolution() external onlyParticipants {\\n        dissolutionApprovals[msg.sender] = true;\\n    }\\n\\n    /**\\n     * @notice Disuelve el compromiso y devuelve el NFT al comprador original si ambos aprueban.\\n     */\\n    function executeDissolution() external onlyParticipants {\\n        require(dissolutionApprovals[userA] && dissolutionApprovals[userB], \\\"Both must approve\\\");\\n        require(!isRedeemed && !isDissolved, \\\"Vault is settled\\\");\\n        isDissolved = true;\\n        IERC721(experienceNFTAddress).safeTransferFrom(address(this), userA, experienceTokenId);\\n        emit Dissolved(userA);\\n    }\\n}\\n\",\"keccak256\":\"0xcfdf20497c369d1a44811f87a9b772b4d6c65608896d97a35cf7be693f08921d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61010060405234801561001157600080fd5b50604051610bd8380380610bd88339810160408190526100309161006e565b6001600160a01b0393841660805291831660a05290911660c05260e0526100b9565b80516001600160a01b038116811461006957600080fd5b919050565b6000806000806080858703121561008457600080fd5b61008d85610052565b935061009b60208601610052565b92506100a960408601610052565b6060959095015193969295505050565b60805160a05160c05160e051610a6861017060003960008181610170015281816104c801526107680152600081816101ad015281816104f6015261078e0152600081816101fc015281816102a501528181610348015281816103d3015281816105bc01528181610647015261087d0152600081816102230152818161027301528181610316015281816103900152818161058a0152818161060401528181610740015281816107f5015261084b0152610a686000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637deb671e1161008c578063c9ff219911610066578063c9ff2199146101ef578063cb1a295f146101f7578063deb22e9a1461021e578063fdd1da9c1461024557600080fd5b80637deb671e146101a057806390f8aa46146101a8578063c134ee87146101e757600080fd5b8062b2dd8a146100d3578063034f6b211461010b578063150b7a0214610118578063272a98a01461014f5780633730a5f81461015957806373a2e3a01461016b575b600080fd5b6100f66100e13660046108f3565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100f69060ff1681565b61013661012636600461092b565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610102565b610157610268565b005b6000546100f690610100900460ff1681565b6101927f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610102565b61015761030b565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610102565b61015761057f565b610157610840565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6100f66102533660046108f3565b60026020526000908152604090205460ff1681565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806102c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6102ec5760405162461bcd60e51b81526004016102e390610a07565b60405180910390fd5b336000908152600160208190526040909120805460ff19169091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061036a5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6103865760405162461bcd60e51b81526004016102e390610a07565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604090205460ff16801561040657506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604090205460ff165b6104465760405162461bcd60e51b8152602060048201526011602482015270426f7468206d75737420617070726f766560781b60448201526064016102e3565b60005460ff161580156104615750600054610100900460ff16155b6104a05760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081a5cc81cd95d1d1b195960821b60448201526064016102e3565b6000805460ff19166001179055604051632142170760e11b81523060048201523360248201527f000000000000000000000000000000000000000000000000000000000000000060448201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b50506040513392507fcb7d87f76b4d6501ac27ed560664bf84ce273a2ddd7b9b1da63c753e68ccae209150600090a2565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806105de5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6105fa5760405162461bcd60e51b81526004016102e390610a07565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526002602052604090205460ff16801561067a57506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526002602052604090205460ff165b6106ba5760405162461bcd60e51b8152602060048201526011602482015270426f7468206d75737420617070726f766560781b60448201526064016102e3565b60005460ff161580156106d55750600054610100900460ff16155b6107145760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081a5cc81cd95d1d1b195960821b60448201526064016102e3565b6000805461ff001916610100179055604051632142170760e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b50506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692507fd7a49410fd24d54abb04314ecda3641dc2c6b904c709df53f119801b011d1b9a9150600090a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061089f5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108bb5760405162461bcd60e51b81526004016102e390610a07565b336000908152600260205260409020805460ff19166001179055565b80356001600160a01b03811681146108ee57600080fd5b919050565b60006020828403121561090557600080fd5b61090e826108d7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561094157600080fd5b61094a856108d7565b9350610958602086016108d7565b925060408501359150606085013567ffffffffffffffff8082111561097c57600080fd5b818701915087601f83011261099057600080fd5b8135818111156109a2576109a2610915565b604051601f8201601f19908116603f011681019083821181831017156109ca576109ca610915565b816040528281528a60208487010111156109e357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b602080825260119082015270139bdd0818481c185c9d1a58da5c185b9d607a1b60408201526060019056fea26469706673582212207b10dd31c2ae11823b8cc60e28643ac842f097722f5670de1c3959878ef1616c64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637deb671e1161008c578063c9ff219911610066578063c9ff2199146101ef578063cb1a295f146101f7578063deb22e9a1461021e578063fdd1da9c1461024557600080fd5b80637deb671e146101a057806390f8aa46146101a8578063c134ee87146101e757600080fd5b8062b2dd8a146100d3578063034f6b211461010b578063150b7a0214610118578063272a98a01461014f5780633730a5f81461015957806373a2e3a01461016b575b600080fd5b6100f66100e13660046108f3565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100f69060ff1681565b61013661012636600461092b565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610102565b610157610268565b005b6000546100f690610100900460ff1681565b6101927f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610102565b61015761030b565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610102565b61015761057f565b610157610840565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6100f66102533660046108f3565b60026020526000908152604090205460ff1681565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806102c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6102ec5760405162461bcd60e51b81526004016102e390610a07565b60405180910390fd5b336000908152600160208190526040909120805460ff19169091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061036a5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6103865760405162461bcd60e51b81526004016102e390610a07565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604090205460ff16801561040657506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604090205460ff165b6104465760405162461bcd60e51b8152602060048201526011602482015270426f7468206d75737420617070726f766560781b60448201526064016102e3565b60005460ff161580156104615750600054610100900460ff16155b6104a05760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081a5cc81cd95d1d1b195960821b60448201526064016102e3565b6000805460ff19166001179055604051632142170760e11b81523060048201523360248201527f000000000000000000000000000000000000000000000000000000000000000060448201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b50506040513392507fcb7d87f76b4d6501ac27ed560664bf84ce273a2ddd7b9b1da63c753e68ccae209150600090a2565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806105de5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6105fa5760405162461bcd60e51b81526004016102e390610a07565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526002602052604090205460ff16801561067a57506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526002602052604090205460ff165b6106ba5760405162461bcd60e51b8152602060048201526011602482015270426f7468206d75737420617070726f766560781b60448201526064016102e3565b60005460ff161580156106d55750600054610100900460ff16155b6107145760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081a5cc81cd95d1d1b195960821b60448201526064016102e3565b6000805461ff001916610100179055604051632142170760e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b50506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692507fd7a49410fd24d54abb04314ecda3641dc2c6b904c709df53f119801b011d1b9a9150600090a2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061089f5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108bb5760405162461bcd60e51b81526004016102e390610a07565b336000908152600260205260409020805460ff19166001179055565b80356001600160a01b03811681146108ee57600080fd5b919050565b60006020828403121561090557600080fd5b61090e826108d7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561094157600080fd5b61094a856108d7565b9350610958602086016108d7565b925060408501359150606085013567ffffffffffffffff8082111561097c57600080fd5b818701915087601f83011261099057600080fd5b8135818111156109a2576109a2610915565b604051601f8201601f19908116603f011681019083821181831017156109ca576109ca610915565b816040528281528a60208487010111156109e357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b602080825260119082015270139bdd0818481c185c9d1a58da5c185b9d607a1b60408201526060019056fea26469706673582212207b10dd31c2ae11823b8cc60e28643ac842f097722f5670de1c3959878ef1616c64736f6c63430008180033",
  "devdoc": {
    "author": "edsphinx",
    "details": "Contiene un ExperienceNFT como promesa. Requiere acuerdo de ambos para actuar.",
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "title": "Commitment Vault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveDissolution()": {
        "notice": "Un participante aprueba la disolución del compromiso."
      },
      "approveRedemption()": {
        "notice": "Un participante aprueba el canje de la experiencia."
      },
      "executeDissolution()": {
        "notice": "Disuelve el compromiso y devuelve el NFT al comprador original si ambos aprueban."
      },
      "executeRedemption()": {
        "notice": "Canjea la experiencia si ambos han aprobado. Transfiere el NFT a quien lo ejecuta."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2980,
        "contract": "contracts/Sunny/CommitmentVault.sol:CommitmentVault",
        "label": "isRedeemed",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2982,
        "contract": "contracts/Sunny/CommitmentVault.sol:CommitmentVault",
        "label": "isDissolved",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2986,
        "contract": "contracts/Sunny/CommitmentVault.sol:CommitmentVault",
        "label": "redemptionApprovals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2990,
        "contract": "contracts/Sunny/CommitmentVault.sol:CommitmentVault",
        "label": "dissolutionApprovals",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}